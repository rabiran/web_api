/// <reference types="node" />
import { QueueSendProperties, ExchangeSendProperties, amqp, Queue } from './internal';
export declare class Message {
    properties: QueueSendProperties | ExchangeSendProperties;
    private content;
    constructor(content: Buffer | String | Object, properties?: QueueSendProperties | ExchangeSendProperties);
    setContent(content: Buffer | String | Object): void;
    getContent(): String | Object;
    getRawContent(): Buffer;
}
export declare class ConsumerMessage extends Message {
    private message;
    private queue;
    acked: boolean;
    nacked: boolean;
    fields: amqp.MessageFields;
    constructor(message: amqp.Message, queue: Queue);
    ack(): void;
    nack(requeue?: boolean, allUpTo?: boolean): void;
    reject(requeue?: boolean): void;
    isProcessed(): boolean;
    static from(msg: amqp.Message, queue: Queue): ConsumerMessage;
}
//# sourceMappingURL=message.d.ts.map